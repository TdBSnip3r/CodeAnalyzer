plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id 'findbugs'
    id "org.sonarqube" version "2.8"
}

group 'com.codeAnalyzer'
version '1.0-SNAPSHOT'

findbugs{
    toolVersion '3.0.1'
    //IncludeFilter assume che non ci sono regole attive se non quelle espresse nell'xml
    includeFilter = file('config/findbugs/findbugs-idea-include.xml')
    //ExcludeFilter il contrario (CIT. Augustus De Morgan)
    //excludeFilter = file('config/findbugs/findbugs-idea.xml')
    //findbugsTest.enabled=false
    //effort 'max'
    //reportLevel 'high'
    ignoreFailures = true
}

findbugsMain{
    source ='src/main/java'
}

findbugsTest{
    source ='src/test/java'
}


pmd{
    toolVersion '6.0.1'
    ruleSetFiles = files("config/pmd/pmd.xml")
    ruleSets = []
    ignoreFailures = true
}

tasks.withType(Pmd){
    reports{
        xml.enabled=true
        html.enabled=true
    }
}


pmdMain {
    source ='src/main/java'
}

pmdTest {
    source ='src/test/java'
}

checkstyle {
    toolVersion '8.25'
    ignoreFailures = true
    configFile file("config/checkstyle/checkstyle.xml")
}

checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}

sourceCompatibility = 1.8

apply plugin: 'jacoco'

repositories {
    mavenCentral()
}


javafx {
    version = "11"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0
            }
        }
    }
}

//Serve per rendere check dipendente da Jacoco altrimenti la build non fallir√† mai
check.dependsOn jacocoTestCoverageVerification

//Test coverage
jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml{
            enabled true
            destination file("${buildDir}/reports/jacoco/jacoco.xml")
        }
        csv.enabled false
        html{
            enabled true
            destination file("${buildDir}/reports/jacocoHtml")
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "SonarQube Community Plugin for Intellij"
        property "sonar.projectKey", "sonar-intellij-plugin"
    }
}


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    //Import di JGit
    compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '4.8.0.201706111038-r'
    //Per una dipendenza di JGit
    testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'
    checkstyle 'com.puppycrawl.tools:checkstyle:8.25'
}

mainClassName = 'Main'
